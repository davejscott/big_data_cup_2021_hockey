# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type)),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
data <- data_nwhl %>%
mutate(
game_state = case_when(
team == home_team ~ str_c(home_team_skaters, "v", away_team_skaters),
team == away_team ~ str_c(away_team_skaters, "v", home_team_skaters)
),
passer = if_else(lag(event, n = 1L) == "Play", lag(player, n = 1L), NA_character_),
pass_type = if_else(lag(detail_1, n = 1L) %in% c("Direct", "Indirect"), lag(detail_1, n = 1L), NA_character_),
pass_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate, n = 1L), NA_real_),
pass_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate, n = 1L), NA_real_),
rec_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate_2, n = 1L), NA_real_),
rec_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate_2, n = 1L), NA_real_),
shooter = if_else(event %in% c("Shot", "Goal"), player, NA_character_),
shot_x = if_else(event %in% c("Shot", "Goal"), x_coordinate, NA_real_),
shot_y = if_else(event %in% c("Shot", "Goal"), 85 - y_coordinate, NA_real_),
shot_type = if_else(event %in% c("Shot", "Goal"), detail_1, NA_character_),
shot_outcome = if_else(event %in% c("Shot", "Goal"), detail_2, NA_character_),
shot_outcome = if_else(event == "Goal", "Goal", shot_outcome),
shot_traffic = if_else(event %in% c("Shot", "Goal"), detail_3, NA),
shot_onetimer = if_else(event %in% c("Shot", "Goal"), detail_4, NA),
pass_dist = sqrt((rec_x - pass_x)^2 + (rec_y - pass_y)^2),
pass_angle = atan2(43 - pass_y, 189 - pass_x) * 180 / pi,
shooter_dist = sqrt((shot_x - rec_x)^2 + (shot_y - rec_y)^2),
shot_dist = sqrt((189 - shot_x)^2 + (43 - shot_y)^2),
shot_angle = atan2(43 - shot_y, 189 - shot_x) * 180 / pi
) %>%
filter(shot_from_pass == TRUE,
pass_type == "Direct") %>%
select(-c(
clock, home_team_skaters, away_team_skaters, event, player,
pass_type, detail_1, detail_2, detail_3, detail_4, player_2,
x_coordinate, y_coordinate, x_coordinate_2, y_coordinate_2,
shot_from_pass, pass_to_shot
)) %>%
rename(time_since_pass = time_btw_events) %>%
relocate(shooter, .after = passer) %>%
# filter(
#   time_since_pass > 8,
#   pass_type == "Direct")
# filter(pass_type == "Direct") %>%
# filter(shot_outcome == "On Net") %>%
# filter(team == "Boston Pride") %>%
# filter(game_date == "2021-01-23")
filter(
# passer == "Shiann Darkangelo",
# shooter == "Taylor Woods",
shot_type == "Wristshot",
# game_state == "5v3"
time_since_pass < 2,
# shot_outcome %in% c("On Net", "Missed"),
)
ggplot(data = data) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_segment(aes(x = shot_x, y = shot_y, xend = 189, yend = 43, colour = shot_outcome),
# arrow = arrow(length = unit(0.3, "cm"))
) +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type)),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic()
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type)),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", time_since_pass, "seconds of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", time_since_pass, "seconds of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", data$time_since_pass, "seconds of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
data <- data_nwhl %>%
mutate(
game_state = case_when(
team == home_team ~ str_c(home_team_skaters, "v", away_team_skaters),
team == away_team ~ str_c(away_team_skaters, "v", home_team_skaters)
),
passer = if_else(lag(event, n = 1L) == "Play", lag(player, n = 1L), NA_character_),
pass_type = if_else(lag(detail_1, n = 1L) %in% c("Direct", "Indirect"), lag(detail_1, n = 1L), NA_character_),
pass_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate, n = 1L), NA_real_),
pass_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate, n = 1L), NA_real_),
rec_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate_2, n = 1L), NA_real_),
rec_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate_2, n = 1L), NA_real_),
shooter = if_else(event %in% c("Shot", "Goal"), player, NA_character_),
shot_x = if_else(event %in% c("Shot", "Goal"), x_coordinate, NA_real_),
shot_y = if_else(event %in% c("Shot", "Goal"), 85 - y_coordinate, NA_real_),
shot_type = if_else(event %in% c("Shot", "Goal"), detail_1, NA_character_),
shot_outcome = if_else(event %in% c("Shot", "Goal"), detail_2, NA_character_),
shot_outcome = if_else(event == "Goal", "Goal", shot_outcome),
shot_traffic = if_else(event %in% c("Shot", "Goal"), detail_3, NA),
shot_onetimer = if_else(event %in% c("Shot", "Goal"), detail_4, NA),
pass_dist = sqrt((rec_x - pass_x)^2 + (rec_y - pass_y)^2),
pass_angle = atan2(43 - pass_y, 189 - pass_x) * 180 / pi,
shooter_dist = sqrt((shot_x - rec_x)^2 + (shot_y - rec_y)^2),
shot_dist = sqrt((189 - shot_x)^2 + (43 - shot_y)^2),
shot_angle = atan2(43 - shot_y, 189 - shot_x) * 180 / pi
) %>%
filter(shot_from_pass == TRUE,
pass_type == "Direct") %>%
select(-c(
clock, home_team_skaters, away_team_skaters, event, player,
pass_type, detail_1, detail_2, detail_3, detail_4, player_2,
x_coordinate, y_coordinate, x_coordinate_2, y_coordinate_2,
shot_from_pass, pass_to_shot
)) %>%
rename(time_since_pass = time_btw_events) %>%
relocate(shooter, .after = passer) %>%
# filter(
#   time_since_pass > 8,
#   pass_type == "Direct")
# filter(pass_type == "Direct") %>%
# filter(shot_outcome == "On Net") %>%
# filter(team == "Boston Pride") %>%
# filter(game_date == "2021-01-23")
filter(
# passer == "Shiann Darkangelo",
# shooter == "Taylor Woods",
shot_type == "Wristshot",
# game_state == "5v3"
time_since_pass <= 2,
# shot_outcome %in% c("On Net", "Missed"),
)
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", data$time_since_pass, " seconds of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
data <- data_nwhl %>%
mutate(
game_state = case_when(
team == home_team ~ str_c(home_team_skaters, "v", away_team_skaters),
team == away_team ~ str_c(away_team_skaters, "v", home_team_skaters)
),
passer = if_else(lag(event, n = 1L) == "Play", lag(player, n = 1L), NA_character_),
pass_type = if_else(lag(detail_1, n = 1L) %in% c("Direct", "Indirect"), lag(detail_1, n = 1L), NA_character_),
pass_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate, n = 1L), NA_real_),
pass_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate, n = 1L), NA_real_),
rec_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate_2, n = 1L), NA_real_),
rec_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate_2, n = 1L), NA_real_),
shooter = if_else(event %in% c("Shot", "Goal"), player, NA_character_),
shot_x = if_else(event %in% c("Shot", "Goal"), x_coordinate, NA_real_),
shot_y = if_else(event %in% c("Shot", "Goal"), 85 - y_coordinate, NA_real_),
shot_type = if_else(event %in% c("Shot", "Goal"), detail_1, NA_character_),
shot_outcome = if_else(event %in% c("Shot", "Goal"), detail_2, NA_character_),
shot_outcome = if_else(event == "Goal", "Goal", shot_outcome),
shot_traffic = if_else(event %in% c("Shot", "Goal"), detail_3, NA),
shot_onetimer = if_else(event %in% c("Shot", "Goal"), detail_4, NA),
pass_dist = sqrt((rec_x - pass_x)^2 + (rec_y - pass_y)^2),
pass_angle = atan2(43 - pass_y, 189 - pass_x) * 180 / pi,
shooter_dist = sqrt((shot_x - rec_x)^2 + (shot_y - rec_y)^2),
shot_dist = sqrt((189 - shot_x)^2 + (43 - shot_y)^2),
shot_angle = atan2(43 - shot_y, 189 - shot_x) * 180 / pi
) %>%
filter(shot_from_pass == TRUE,
pass_type == "Direct") %>%
select(-c(
clock, home_team_skaters, away_team_skaters, event, player,
pass_type, detail_1, detail_2, detail_3, detail_4, player_2,
x_coordinate, y_coordinate, x_coordinate_2, y_coordinate_2,
shot_from_pass, pass_to_shot
)) %>%
rename(time_since_pass = time_btw_events) %>%
relocate(shooter, .after = passer) %>%
# filter(
#   time_since_pass > 8,
#   pass_type == "Direct")
# filter(pass_type == "Direct") %>%
# filter(shot_outcome == "On Net") %>%
# filter(team == "Boston Pride") %>%
# filter(game_date == "2021-01-23")
filter(
# passer == "Shiann Darkangelo",
# shooter == "Taylor Woods",
shot_type == "Wristshot",
# game_state == "5v3"
time_since_pass <= 1,
# shot_outcome %in% c("On Net", "Missed"),
)
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", data$time_since_pass, " seconds of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", data$time_since_pass, " sec of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
data <- data_nwhl %>%
mutate(
game_state = case_when(
team == home_team ~ str_c(home_team_skaters, "v", away_team_skaters),
team == away_team ~ str_c(away_team_skaters, "v", home_team_skaters)
),
passer = if_else(lag(event, n = 1L) == "Play", lag(player, n = 1L), NA_character_),
pass_type = if_else(lag(detail_1, n = 1L) %in% c("Direct", "Indirect"), lag(detail_1, n = 1L), NA_character_),
pass_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate, n = 1L), NA_real_),
pass_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate, n = 1L), NA_real_),
rec_x = if_else(lag(event, n = 1L) == "Play", lag(x_coordinate_2, n = 1L), NA_real_),
rec_y = if_else(lag(event, n = 1L) == "Play", lag(85 - y_coordinate_2, n = 1L), NA_real_),
shooter = if_else(event %in% c("Shot", "Goal"), player, NA_character_),
shot_x = if_else(event %in% c("Shot", "Goal"), x_coordinate, NA_real_),
shot_y = if_else(event %in% c("Shot", "Goal"), 85 - y_coordinate, NA_real_),
shot_type = if_else(event %in% c("Shot", "Goal"), detail_1, NA_character_),
shot_outcome = if_else(event %in% c("Shot", "Goal"), detail_2, NA_character_),
shot_outcome = if_else(event == "Goal", "Goal", shot_outcome),
shot_traffic = if_else(event %in% c("Shot", "Goal"), detail_3, NA),
shot_onetimer = if_else(event %in% c("Shot", "Goal"), detail_4, NA),
pass_dist = sqrt((rec_x - pass_x)^2 + (rec_y - pass_y)^2),
pass_angle = atan2(43 - pass_y, 189 - pass_x) * 180 / pi,
shooter_dist = sqrt((shot_x - rec_x)^2 + (shot_y - rec_y)^2),
shot_dist = sqrt((189 - shot_x)^2 + (43 - shot_y)^2),
shot_angle = atan2(43 - shot_y, 189 - shot_x) * 180 / pi
) %>%
filter(shot_from_pass == TRUE,
pass_type == "Direct") %>%
select(-c(
clock, home_team_skaters, away_team_skaters, event, player,
pass_type, detail_1, detail_2, detail_3, detail_4, player_2,
x_coordinate, y_coordinate, x_coordinate_2, y_coordinate_2,
shot_from_pass, pass_to_shot
)) %>%
rename(time_since_pass = time_btw_events) %>%
relocate(shooter, .after = passer) %>%
# filter(
#   time_since_pass > 8,
#   pass_type == "Direct")
# filter(pass_type == "Direct") %>%
# filter(shot_outcome == "On Net") %>%
# filter(team == "Boston Pride") %>%
# filter(game_date == "2021-01-23")
filter(
# passer == "Shiann Darkangelo",
# shooter == "Taylor Woods",
shot_type == "Slapshot",
# game_state == "5v3"
time_since_pass <= 1,
# shot_outcome %in% c("On Net", "Missed"),
)
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within ", data$time_since_pass, " sec of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
ggplot(data = data,
mapping = aes(x = shot_x, y = shot_y)) +
geom_segment(aes(x = pass_x, y = pass_y, xend = rec_x, yend = rec_y),
arrow = arrow(length = unit(0.3, "cm"))
) +
geom_segment(aes(x = rec_x, y = rec_y, xend = shot_x, yend = shot_y),
# arrow = arrow(length = unit(0.3, "cm")),
linetype = "dashed"
) +
geom_point(aes(colour = shot_outcome)) +
# geom_density_2d() +
labs(
# title = paste0("Direct passes from ", data$passer),
# title = paste0("Shots by ", data$shooter, " originating from direct passes"),
title = paste0("All shots classified as a ", tolower(data$shot_type), ", taken within 1 sec of receiving a pass"),
# title = paste0("All shots taken at ", data$game_state),
subtitle = paste0("Arrows show pass distance and direction,",
"\ndashed lines show displacement of skater before shot,",
"\nand coloured lines show shot outcome"),
x = "",
y = ""
) +
lims(
x = c(0, 200),
y = c(0, 85)
) +
coord_fixed() +
theme_classic() +
facet_wrap(vars(shot_outcome))
library(tidyverse)
library(here)
data <- read_csv("sales_data.csv")
